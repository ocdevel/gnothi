The current task is that when a CANT_SNOOP error is thrown, it throws an error on the server (thus triggering the Logger to log an error in AWS), and shows an ErrorSnack in the UI. The CANT_SNOOP is less of an error, and more of a blocker on particular features which aren't shared from UserA to UserB. Eg, if a Share has entries of a certain tag, but no other fields, then UserB should see the entries, and in place of the features not shared (behaviors, book recommendations, profile information, etc) there should simply be a card that says something like "not shared". Likely some significant changes will need to happen regarding services/main.ts, the CANT_SNOOP error, and various locations in the frontend to accomodate this change. That is, CANT_SNOOP shouldn't trigger the traditional error flow, and instead should pass to the client something that can be consumed and shown as a card indicating missing share privileges. Of course, the whole frontend will need to be searched and accounted for all this. As far as entries go, nothing needs to happen since it will simply return an empty list of entries. Don't add any new files, or make any large changes, since much of what's needed should already exist in the codebase, but in an incomplete state. Eg, ErrorSnack and Error (in the same file) have a concept of inline errors. In main.ts, for catching CANT_SNOOP, you can simply pass onto the client a response with this indicator.